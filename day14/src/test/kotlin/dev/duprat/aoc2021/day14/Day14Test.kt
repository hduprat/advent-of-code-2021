/*
 * This Kotlin source file was generated by the Gradle "init" task.
 */
package dev.duprat.aoc2021.day14

import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test

class Day14Test {
    @Test
    fun testInit() {
        val scenario = Day14Scenario()
        assertEquals("NNCB", scenario.basePolymer)

        assertEquals(1, scenario.occurrenceMap.get("NN"))
        assertEquals(1, scenario.occurrenceMap.get("NC"))
        assertEquals(1, scenario.occurrenceMap.get("CB"))
        assertEquals(0, scenario.occurrenceMap.get("BC"))

        assertEquals(16, scenario.insertionRules.size)
        assertEquals(listOf("NC", "CN"), scenario.insertionRules.get("NN"))
    }

    @Test
    fun testInsertion() {
        val scenario = Day14Scenario()
        scenario.insert()
        assertEquals(0, scenario.occurrenceMap.getOrDefault("NN", 0))
        assertEquals(1, scenario.occurrenceMap.getOrDefault("NC", 0))
        assertEquals(0, scenario.occurrenceMap.getOrDefault("CB", 0))
        assertEquals(1, scenario.occurrenceMap.getOrDefault("CN", 0))
        assertEquals(1, scenario.occurrenceMap.getOrDefault("NB", 0))
        assertEquals(1, scenario.occurrenceMap.getOrDefault("BC", 0))
        assertEquals(1, scenario.occurrenceMap.getOrDefault("CH", 0))
        assertEquals(1, scenario.occurrenceMap.getOrDefault("HB", 0))
    }

    @Test
    fun testElementFrequencyMap() {
        val scenario = Day14Scenario()
        scenario.insertUntilStep(10)
        val freqMap = scenario.createElementFrequencyMap()
        assertEquals(1749, freqMap['B'])
        assertEquals(298, freqMap['C'])
        assertEquals(161, freqMap['H'])
        assertEquals(865, freqMap['N'])
    }

    @Test
    fun testElementFrequency() {
        val scenario = Day14Scenario()
        scenario.insertUntilStep(10)
        assertEquals(161, scenario.findLeastPresentElementFrequency())
        assertEquals(1749, scenario.findMostPresentElementFrequency())
    }

    @Test
    fun testElementFrequencyMap40Steps() {
        val scenario = Day14Scenario()
        scenario.insertUntilStep(40)
        val freqMap = scenario.createElementFrequencyMap()
        assertEquals(2192039569602, freqMap['B'])
        assertEquals(3849876073, freqMap['H'])
    }
}
